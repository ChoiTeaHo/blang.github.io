---
title:  "노드JS MariaDB 구축"
excerpt: "노드JS MariaDB 구축 입니다."

categories:
  - nodejs
tags:
  - [node.js]

toc: true
toc_sticky: true

last_modified_at: 2023-03-17T20:00:00-05:00
---

## 과정
1. MySQL(MariaDB) 설치
2. MySQL(MariaDB) NPM 모듈 설치
3. config 파일 생성
4. express와 연동하기
5. 결과


## DB서버 구축
### MySQL(MariaDB) 설치
: 해당 내용은 이미 나의 라즈베리파이 4번 서버에 구축해해놔서 생략한다.

### MySQL(MariaDB) NPM 모듈 설치
: mysql 연결하기 위한 확장 모듈 설치. (커넥터)

```bash
$ sudo npm install mysql2

added 10 packages, and audited 68 packages in 2s

7 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities

```
  
pacakage.json 을 열어보면 정상 추가되었다.
  
```json
  "dependencies": {
    "express": "^4.18.2",
    "mysql2": "^3.2.0"
  }

```

### config 파일 생성
: 생성한 컨피그 js 파일에서 확장모듈 포함 및 DB Connection 정보를 설정한다.

**컨피그 디렉토리 생성**  
```bash
mkdir ./config
vi db_config.js

```
  
**db_config.js**  
```js
// mysql 접속정보
const mysql = require('mysql');  // mysql 모듈 로드
const db = mysql.createPool({
  host: 'blang.co.kr',
  port: 3306,
  user: "INSTC",
  password: "a",
  database: "DSDBDO0",
});

module.exports = db;  //모듈 생성

```
  
'module.exports'는 Node.js에서 모듈을 만들 때 사용하는 객체이다. 이 객체를 사용하면 모듈 밖에서 해당 모듈의 함수, 변수, 객체 등에 접근할 수 있다.
{: .notice--info}

### express와 연동하기
: 

```js
const express = require('express');
const app = express();  //생성자: 반드시 이렇게 사용해야 에러가 안난다.
const PORT = 3000;
const db = require('./config/db_config.js');  //모듈을 사용한다.

/****************************************
- DB 연동
****************************************/
app.get('/select', (req,res) => {
    console.log('SELECT 수행');
    
    db.query('SELECT * FROM TBDBDW001', (err, data) => {
    	if(!err)
        {
        	console.log('[SUCCESS]: ' + data);
            res.send(data);
        }
        else
        {
        	console.log('[FAILED]: ' + data);
            res.send(data);
        }
    });
});

/****************************************
- 서버리스너
****************************************/
app.listen(PORT, () => {
	console.log(`Express SERVER START... >> http://localhost:${PORT}`);
});

app.use('/customer', customerRoute);  //라우트 모듈

```

1. './config' 경로에서 'db_config.js' 모듈을 불러온다. 
2. 'db.query( )' 메소드로 DB서버의 데이터베이스(MariaDB)에서 데이터를 가져온다.
  - 문법: db.query(실행할 sql 쿼리, callback);


### 결과

![사진1](/assets/images/WebProgramming/NodeJS/node-dbconn-result.jpg)

> 정상적으로 DB서버의 값을 조회회하고 리턴했다. 결과를 보면 JSON 형태로 떨어지는 것을 확인할 수 있다.